EMPTY EMPTY
DECLARE DECLARE
MODULE MODULE
ID ID
SEMICOL SEMICOL
DRIVERDEF DRIVERDEF
DRIVER DRIVER
PROGRAM PROGRAM
DRIVERENDDEF DRIVERENDDEF
DEF DEF
ENDDEF ENDDEF
TAKES TAKES
INPUT INPUT
SQBO SQBO
SQBC SQBC
RETURNS RETURNS
COLON COLON
COMMA COMMA
INTEGER INTEGER
REAL REAL
BOOLEAN BOOLEAN
ARRAY ARRAY
OF OF
START START
END END
GET_VALUE GET_VALUE
BO BO
BC BC
PRINT PRINT
NUM NUM
RNUM RNUM
ASSIGNOP ASSIGNOP
USE USE
WITH WITH
PARAMETER PARAMETER
MINUS MINUS
PLUS PLUS
MUL MUL
DIV DIV
AND AND
OR OR
LT LT
LE LE
GT GT
GE GE
EQ EQ
NE NE
SWITCH SWITCH
CASE CASE
BREAK BREAK
TRUE TRUE
FALSE FALSE
DEFAULT DEFAULT
FOR FOR
IN IN
WHILE WHILE
RANGEOP RANGEOP
moduleDeclarations EMPTY DECLARE
moduleDeclaration DECLARE
otherModules EMPTY DEF
driverModule DRIVERDEF
module DEF 
ret RETURNS EMPTY
input_plist ID
N1 COMMA EMPTY
output_plist ID
N2 COMMA EMPTY
dataType INTEGER REAL BOOLEAN ARRAY
type INTEGER REAL BOOLEAN
moduleDef START
statements EMPTY GET_VALUE PRINT DECLARE FOR WHILE ID USE SQBO SWITCH
ioStmt GET_VALUE PRINT
var ID NUM RNUM TRUE FALSE
whichId SQBO EMPTY
assignmentStmt ID
lvalueIDStmt ASSIGNOP
lvalueARRStmt SQBO
index NUM ID
moduleReuseStmt USE SQBO
optional SQBO EMPTY
idList ID
N3 COMMA EMPTY
expression MINUS BO ID NUM RNUM TRUE FALSE
arithmeticOrBooleanExpr BO ID NUM RNUM TRUE FALSE
N7 EMPTY AND OR
N8 EMPTY LT LE GT GE EQ NE
N4 EMPTY PLUS MINUS
N5 EMPTY MUL DIV
op1 PLUS MINUS
op2 MUL DIV
logicalOp AND OR
relationalOp LT LE GT GE EQ NE
declareStmt DECLARE
conditionalStmt SWITCH
caseStmts CASE
N9 CASE EMPTY
value NUM TRUE FALSE
Default DEFAULT EMPTY
iterativeStmt FOR WHILE
range NUM
statement GET_VALUE PRINT DECLARE FOR WHILE ID USE SQBO EMPTY SWITCH
simpleStmt ID USE SQBO
whichStmt ASSIGNOP SQBO
factor ID NUM RNUM TRUE FALSE
program DECLARE DRIVERDEF DEF
term ID NUM RNUM TRUE FALSE
arithmeticExpr ID NUM RNUM TRUE FALSE
AnyTerm ID NUM RNUM TRUE FALSE
