program DOLLAR
moduleDeclarations DRIVERDEF DEF
moduleDeclaration DECLARE DRIVERDEF DEF
otherModules DRIVERDEF DOLLAR
driverModule DEF DOLLAR
module DEF DRIVERDEF DOLLAR
ret START
input_plist SQBC
N1 SQBC
output_plist SQBC
N2 SQBC
dataType SEMICOL COMMA SQBC
type COMMA SEMICOL SQBC
moduleDef DEF DRIVERDEF DOLLAR
statements END BREAK
statement GET_VALUE PRINT DECLARE FOR WHILE ID USE SQBO SWITCH END BREAK
ioStmt GET_VALUE PRINT DECLARE FOR WHILE ID USE SQBO SWITCH END BREAK
var BC MUL DIV PLUS MINUS LT LE GT GE EQ NE AND OR SEMICOL
whichId BC MUL DIV PLUS MINUS LT LE GT GE EQ NE AND OR SEMICOL
simpleStmt GET_VALUE PRINT DECLARE FOR WHILE ID USE SQBO SWITCH END BREAK
assignmentStmt GET_VALUE PRINT DECLARE FOR WHILE ID USE SQBO SWITCH END BREAK
whichStmt GET_VALUE PRINT DECLARE FOR WHILE ID USE SQBO SWITCH END BREAK
lvalueIDStmt GET_VALUE PRINT DECLARE FOR WHILE ID USE SQBO SWITCH END BREAK
lvalueARRStmt GET_VALUE PRINT DECLARE FOR WHILE ID USE SQBO SWITCH END BREAK
index SQBC
moduleReuseStmt GET_VALUE PRINT DECLARE FOR WHILE ID USE SQBO SWITCH END BREAK
optional USE 
idList COLON SQBC SEMICOL
N3 COLON SQBC SEMICOL
expression SEMICOL BC
arithmeticOrBooleanExpr BC SEMICOL
N7 BC SEMICOL
AnyTerm AND OR BC SEMICOL
N8 AND OR BC SEMICOL
arithmeticExpr LT LE GT GE EQ NE BC AND OR SEMICOL
N4 LT LE GT GE EQ NE BC AND OR SEMICOL
term PLUS MINUS LT LE GT GE EQ NE BC AND OR SEMICOL
N5 PLUS MINUS LT LE GT GE EQ NE BC AND OR SEMICOL
factor MUL DIV PLUS MINUS LT LE GT GE EQ NE BC AND OR SEMICOL
op1 ID NUM RNUM	TRUE FALSE
op2 ID NUM RNUM TRUE FALSE
logicalOp ID NUM RNUM TRUE FALSE
relationalOp ID NUM RNUM TRUE FALSE
declareStmt GET_VALUE PRINT DECLARE FOR WHILE ID USE SQBO SWITCH END BREAK
conditionalStmt GET_VALUE PRINT DECLARE FOR WHILE ID USE SQBO SWITCH END BREAK
caseStmts END DEFAULT
N9 END DEFAULT
value COLON
Default END
iterativeStmt GET_VALUE PRINT DECLARE FOR WHILE ID USE SQBO SWITCH END BREAK
range BC SQBC
