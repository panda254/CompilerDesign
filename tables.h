//Batch 66
//Akshit Johry 2014A7PS077P
//Arpit Panda 2014A7PS114P


enum table {
PLUS,//0
MINUS,
MUL,
DIV,
LT,
LE,//5
GE,
GT,
EQ,
NE,
DEF,//10
ENDDEF,
COLON,
RANGEOP,
SEMICOL,
COMMA,//15
ASSIGNOP,
SQBO,
SQBC,
BO,
BC,//20
INTEGER,
REAL,
BOOLEAN,
OF,
ARRAY,//25
START,
END,
DECLARE,
MODULE,
DRIVER,//30
PROGRAM,
GET_VALUE,
PRINT,
USE,
WITH,//35
PARAMETERS,
TRUE,
FALSE,
TAKES,
INPUT,//40
RETURNS,
AND,
OR,
FOR,
IN,//45
SWITCH,
CASE,
BREAK,
DEFAULT,
WHILE,//50
ID,
COMMENTMARK,
DRIVERDEF,
DRIVERENDDEF,
MORETHAN8,
UNKNOWN_SYMBOL,
UNKNOWN_LEXEME,//55
NUM,
RNUM,
DOLLAR,//60
EMPTY,
program,
moduleDeclarations,
moduleDeclaration,
otherModules,
driverModule,
module,
ret,
input_plist,
N1,
output_plist,
N2,//70
dataType,
type,
moduleDef,
statements,
statement,
ioStmt,
var,
whichId,
simpleStmt,
assignmentStmt,//80
whichStmt,
lvalueIDStmt,
lvalueARRStmt,
Index,
moduleReuseStmt,
optional,
idList,
N3,
expression,
arithmeticOrBooleanExpr,//90
N7,
AnyTerm,
N8,
arithmeticExpr,
N4,
term,
N5,
factor,
op1,
op2,//100
logicalOp,
relationalOp,
declareStmt,
conditionalStmt,
caseStmts,
N9,
value,
Default,
iterativeStmt,
range//110

  };
char stringss[150][50]={
"PLUS",//0
"MINUS",
"MUL",
"DIV",
"LT",
"LE",//5
"GE",
"GT",
"EQ",
"NE",
"DEF",//10
"ENDDEF",
"COLON",
"RANGEOP",
"SEMICOL",
"COMMA",
"ASSIGNOP",
"SQBO",
"SQBC",
"BO",
"BC",//20
"INTEGER",
"REAL",
"BOOLEAN",
 "OF",
"ARRAY",
"START",
"END",
"DECLARE",
"MODULE",
"DRIVER",//30
"PROGRAM",
"GET_VALUE",
"PRINT",
"USE",
"WITH",
"PARAMETERS",
"TRUE",
"FALSE",
"TAKES",
"INPUT",//40
"RETURNS",
"AND",
"OR",
 "FOR",
 "IN",
 "SWITCH",
 "CASE",
 "BREAK",
 "DEFAULT",
 "WHILE",//50
"ID",
"COMMENTMARK",
"DRIVERDEF",
"DRIVERENDDEF",
"MORETHAN8",
"UNKNOWN_SYMBOL",
"UNKNOWN_LEXEME",
"NUM",
"RNUM",
"DOLLAR",
"EMPTY",
"program",
"moduleDeclarations",
"moduleDeclaration",
"otherModules",
"driverModule",
"module",
"ret",
"input_plist",
"N1",
"output_plist",
"N2",
"dataType",
"type",
"moduleDef",
"statements",
"statement",
"ioStmt",
"var",
"whichId",
"simpleStmt",
"assignmentStmt",
"whichStmt",
"lvalueIDStmt",
"lvalueARRStmt",
"Index",
"moduleReuseStmt",
"optional",
"idList",
"N3",
"expression",
"arithmeticOrBooleanExpr",
"N7",
"AnyTerm",
"N8",
"arithmeticExpr",
"N4",
"term",
"N5",
"factor",
"op1",
"op2",
"logicalOp",
"relationalOp",
"declareStmt",
"conditionalStmt",
"caseStmts",
"N9",
"value",
"Default",
"iterativeStmt",
"range"//112
  };



char strings[100][15]={
"+","-","*","/","<","<=",">=",">","==","!=","<<",">>",":","..",";",",",":=","[","]","(",")","integer","real","boolean","of","array","start","end","declare","module","driver","program","get_value","print","use","with","parameters","true","false","takes","input","returns","AND","OR","for","in","switch","case","break","Default","while","ID","**","<<<",">>>"};

